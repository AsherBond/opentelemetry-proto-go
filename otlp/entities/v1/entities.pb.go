// Copyright 2020, OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.6
// source: opentelemetry/proto/entities/v1/entities.proto

package v1

import (
	v1 "go.opentelemetry.io/proto/otlp/common/v1"
	_ "go.opentelemetry.io/proto/otlp/resource/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EntitiesData represents the entities data that can be stored in persistent storage,
// OR can be embedded by other protocols that transfer OTLP entities data but do not
// implement the OTLP protocol.
//
// The main difference between this message and collector protocol is that
// in this message there will not be any "control" or "metadata" specific to
// OTLP protocol.
//
// When new fields are added into this message, the OTLP request MUST be updated
// as well.
type EntitiesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScopeEntities []*ScopeEntities `protobuf:"bytes,1,rep,name=scope_entities,json=scopeEntities,proto3" json:"scope_entities,omitempty"`
}

func (x *EntitiesData) Reset() {
	*x = EntitiesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitiesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitiesData) ProtoMessage() {}

func (x *EntitiesData) ProtoReflect() protoreflect.Message {
	mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitiesData.ProtoReflect.Descriptor instead.
func (*EntitiesData) Descriptor() ([]byte, []int) {
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP(), []int{0}
}

func (x *EntitiesData) GetScopeEntities() []*ScopeEntities {
	if x != nil {
		return x.ScopeEntities
	}
	return nil
}

// A collection of Entities produced by a Scope.
type ScopeEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The instrumentation scope information for the entities in this message.
	// Semantically when InstrumentationScope isn't set, it is equivalent with
	// an empty instrumentation scope name (unknown).
	Scope        *v1.InstrumentationScope `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	EntityEvents []*EntityEvent           `protobuf:"bytes,2,rep,name=entity_events,json=entityEvents,proto3" json:"entity_events,omitempty"`
	// This schema_url applies to all entities in the "entity_events" field.
	SchemaUrl string `protobuf:"bytes,3,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
}

func (x *ScopeEntities) Reset() {
	*x = ScopeEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeEntities) ProtoMessage() {}

func (x *ScopeEntities) ProtoReflect() protoreflect.Message {
	mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeEntities.ProtoReflect.Descriptor instead.
func (*ScopeEntities) Descriptor() ([]byte, []int) {
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP(), []int{1}
}

func (x *ScopeEntities) GetScope() *v1.InstrumentationScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ScopeEntities) GetEntityEvents() []*EntityEvent {
	if x != nil {
		return x.EntityEvents
	}
	return nil
}

func (x *ScopeEntities) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

// Entity event, describes something that happened with the entity.
type EntityEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time when this state was observed.
	TimeUnixNano uint64 `protobuf:"varint,1,opt,name=time_unix_nano,json=timeUnixNano,proto3" json:"time_unix_nano,omitempty"`
	// Type of the entity, e.g. "service", "host", etc.
	EntityType string `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	// Set of attributes that identify the entity.
	Id []*v1.KeyValue `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	// One of the following event types must be set.
	//
	// Types that are assignable to Data:
	//	*EntityEvent_EntityState
	//	*EntityEvent_EntityDelete
	Data isEntityEvent_Data `protobuf_oneof:"data"`
}

func (x *EntityEvent) Reset() {
	*x = EntityEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityEvent) ProtoMessage() {}

func (x *EntityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityEvent.ProtoReflect.Descriptor instead.
func (*EntityEvent) Descriptor() ([]byte, []int) {
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP(), []int{2}
}

func (x *EntityEvent) GetTimeUnixNano() uint64 {
	if x != nil {
		return x.TimeUnixNano
	}
	return 0
}

func (x *EntityEvent) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *EntityEvent) GetId() []*v1.KeyValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (m *EntityEvent) GetData() isEntityEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *EntityEvent) GetEntityState() *EntityState {
	if x, ok := x.GetData().(*EntityEvent_EntityState); ok {
		return x.EntityState
	}
	return nil
}

func (x *EntityEvent) GetEntityDelete() *EntityDelete {
	if x, ok := x.GetData().(*EntityEvent_EntityDelete); ok {
		return x.EntityDelete
	}
	return nil
}

type isEntityEvent_Data interface {
	isEntityEvent_Data()
}

type EntityEvent_EntityState struct {
	EntityState *EntityState `protobuf:"bytes,4,opt,name=entity_state,json=entityState,proto3,oneof"`
}

type EntityEvent_EntityDelete struct {
	EntityDelete *EntityDelete `protobuf:"bytes,5,opt,name=entity_delete,json=entityDelete,proto3,oneof"`
}

func (*EntityEvent_EntityState) isEntityEvent_Data() {}

func (*EntityEvent_EntityDelete) isEntityEvent_Data() {}

// The full state of the Entity.
type EntityState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set of non-identifying attributes only.
	Attributes             []*v1.KeyValue `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	DroppedAttributesCount uint32         `protobuf:"varint,5,opt,name=dropped_attributes_count,json=droppedAttributesCount,proto3" json:"dropped_attributes_count,omitempty"`
}

func (x *EntityState) Reset() {
	*x = EntityState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityState) ProtoMessage() {}

func (x *EntityState) ProtoReflect() protoreflect.Message {
	mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityState.ProtoReflect.Descriptor instead.
func (*EntityState) Descriptor() ([]byte, []int) {
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP(), []int{3}
}

func (x *EntityState) GetAttributes() []*v1.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *EntityState) GetDroppedAttributesCount() uint32 {
	if x != nil {
		return x.DroppedAttributesCount
	}
	return 0
}

// Deletion event. No additional information is recorded.
type EntityDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntityDelete) Reset() {
	*x = EntityDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDelete) ProtoMessage() {}

func (x *EntityDelete) ProtoReflect() protoreflect.Message {
	mi := &file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDelete.ProtoReflect.Descriptor instead.
func (*EntityDelete) Descriptor() ([]byte, []int) {
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP(), []int{4}
}

var File_opentelemetry_proto_entities_v1_entities_proto protoreflect.FileDescriptor

var file_opentelemetry_proto_entities_v1_entities_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x1a, 0x2a, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a,
	0x0c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a,
	0x0e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x51, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x55, 0x72, 0x6c, 0x22, 0xbe, 0x02, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x18, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x83, 0x01, 0x0a, 0x22, 0x69, 0x6f, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0d,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2a, 0x67, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x74, 0x6c, 0x70, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0xaa, 0x02, 0x1f, 0x4f, 0x70,
	0x65, 0x6e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opentelemetry_proto_entities_v1_entities_proto_rawDescOnce sync.Once
	file_opentelemetry_proto_entities_v1_entities_proto_rawDescData = file_opentelemetry_proto_entities_v1_entities_proto_rawDesc
)

func file_opentelemetry_proto_entities_v1_entities_proto_rawDescGZIP() []byte {
	file_opentelemetry_proto_entities_v1_entities_proto_rawDescOnce.Do(func() {
		file_opentelemetry_proto_entities_v1_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_opentelemetry_proto_entities_v1_entities_proto_rawDescData)
	})
	return file_opentelemetry_proto_entities_v1_entities_proto_rawDescData
}

var file_opentelemetry_proto_entities_v1_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_opentelemetry_proto_entities_v1_entities_proto_goTypes = []interface{}{
	(*EntitiesData)(nil),            // 0: opentelemetry.proto.entities.v1.EntitiesData
	(*ScopeEntities)(nil),           // 1: opentelemetry.proto.entities.v1.ScopeEntities
	(*EntityEvent)(nil),             // 2: opentelemetry.proto.entities.v1.EntityEvent
	(*EntityState)(nil),             // 3: opentelemetry.proto.entities.v1.EntityState
	(*EntityDelete)(nil),            // 4: opentelemetry.proto.entities.v1.EntityDelete
	(*v1.InstrumentationScope)(nil), // 5: opentelemetry.proto.common.v1.InstrumentationScope
	(*v1.KeyValue)(nil),             // 6: opentelemetry.proto.common.v1.KeyValue
}
var file_opentelemetry_proto_entities_v1_entities_proto_depIdxs = []int32{
	1, // 0: opentelemetry.proto.entities.v1.EntitiesData.scope_entities:type_name -> opentelemetry.proto.entities.v1.ScopeEntities
	5, // 1: opentelemetry.proto.entities.v1.ScopeEntities.scope:type_name -> opentelemetry.proto.common.v1.InstrumentationScope
	2, // 2: opentelemetry.proto.entities.v1.ScopeEntities.entity_events:type_name -> opentelemetry.proto.entities.v1.EntityEvent
	6, // 3: opentelemetry.proto.entities.v1.EntityEvent.id:type_name -> opentelemetry.proto.common.v1.KeyValue
	3, // 4: opentelemetry.proto.entities.v1.EntityEvent.entity_state:type_name -> opentelemetry.proto.entities.v1.EntityState
	4, // 5: opentelemetry.proto.entities.v1.EntityEvent.entity_delete:type_name -> opentelemetry.proto.entities.v1.EntityDelete
	6, // 6: opentelemetry.proto.entities.v1.EntityState.attributes:type_name -> opentelemetry.proto.common.v1.KeyValue
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_opentelemetry_proto_entities_v1_entities_proto_init() }
func file_opentelemetry_proto_entities_v1_entities_proto_init() {
	if File_opentelemetry_proto_entities_v1_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitiesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_opentelemetry_proto_entities_v1_entities_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EntityEvent_EntityState)(nil),
		(*EntityEvent_EntityDelete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opentelemetry_proto_entities_v1_entities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opentelemetry_proto_entities_v1_entities_proto_goTypes,
		DependencyIndexes: file_opentelemetry_proto_entities_v1_entities_proto_depIdxs,
		MessageInfos:      file_opentelemetry_proto_entities_v1_entities_proto_msgTypes,
	}.Build()
	File_opentelemetry_proto_entities_v1_entities_proto = out.File
	file_opentelemetry_proto_entities_v1_entities_proto_rawDesc = nil
	file_opentelemetry_proto_entities_v1_entities_proto_goTypes = nil
	file_opentelemetry_proto_entities_v1_entities_proto_depIdxs = nil
}
